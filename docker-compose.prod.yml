# Production Environment - Docker Compose Configuration
version: '3.8'

services:
  app-prod:
    build:
      context: .
      dockerfile: Dockerfile.prod
      target: production
    container_name: dt-visuals-prod
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:${PROD_POSTGRES_PASSWORD:-prodpassword}@postgres-prod:5432/${PROD_POSTGRES_DB:-dt_visuals_prod}
      - SESSION_SECRET=${PROD_SESSION_SECRET:-prod-session-secret-key-change-this}
      - PORT=5000
      - HOST=0.0.0.0
      - ENABLE_TIMELINE=true
      - VIDEO_UPLOAD_LIMIT=100MB
      - TIMELINE_NOTES_MAX_LENGTH=5000
    volumes:
      - uploads-prod:/app/uploads
    depends_on:
      postgres-prod:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - dt-visuals-prod
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres-prod:
    image: postgres:15-alpine
    container_name: dt-visuals-postgres-prod
    environment:
      - POSTGRES_DB=${PROD_POSTGRES_DB:-dt_visuals_prod}
      - POSTGRES_USER=${PROD_POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${PROD_POSTGRES_PASSWORD:-prodpassword}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres-prod-data:/var/lib/postgresql/data
      - ./docker/postgres/init-prod.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - dt-visuals-prod
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PROD_POSTGRES_USER:-postgres} -d ${PROD_POSTGRES_DB:-dt_visuals_prod}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  postgres-prod-data:
    driver: local
    name: dt-visuals-postgres-prod-data
  uploads-prod:
    driver: local
    name: dt-visuals-uploads-prod

networks:
  dt-visuals-prod:
    driver: bridge
    name: dt-visuals-prod-network