import { z } from "zod";
export declare const users: any;
export declare const clients: any;
export declare const clientUsers: any;
export declare const roles: any;
export declare const permissions: any;
export declare const userRoles: any;
export declare const rolePermissions: any;
export declare const media: any;
export declare const mediaClients: any;
export declare const websiteSettings: any;
export declare const brandingSettings: any;
export declare const mediaFeedback: any;
export declare const mediaTimelineNotes: any;
export declare const usersRelations: any;
export declare const clientsRelations: any;
export declare const clientUsersRelations: any;
export declare const rolesRelations: any;
export declare const permissionsRelations: any;
export declare const userRolesRelations: any;
export declare const rolePermissionsRelations: any;
export declare const mediaRelations: any;
export declare const mediaFeedbackRelations: any;
export declare const mediaTimelineNotesRelations: any;
export declare const mediaClientsRelations: any;
export declare const websiteSettingsRelations: any;
export declare const brandingSettingsRelations: any;
export declare const insertUserSchema: any;
export declare const insertRoleSchema: any;
export declare const insertPermissionSchema: any;
export declare const insertClientSchema: any;
export declare const insertClientUserSchema: any;
export declare const insertMediaSchema: any;
export declare const insertMediaClientSchema: any;
export declare const insertBrandingSettingsSchema: any;
export type BrandingSettings = typeof brandingSettings.$inferSelect;
export type InsertBrandingSettings = typeof insertBrandingSettingsSchema._type;
export declare const insertWebsiteSettingsSchema: any;
export type User = typeof users.$inferSelect;
export type InsertUser = z.infer<typeof insertUserSchema>;
export type Role = typeof roles.$inferSelect;
export type InsertRole = z.infer<typeof insertRoleSchema>;
export type Permission = typeof permissions.$inferSelect;
export type InsertPermission = z.infer<typeof insertPermissionSchema>;
export type Client = typeof clients.$inferSelect;
export type InsertClient = z.infer<typeof insertClientSchema>;
export type ClientUser = typeof clientUsers.$inferSelect;
export type InsertClientUser = z.infer<typeof insertClientUserSchema>;
export type Media = typeof media.$inferSelect;
export type InsertMedia = z.infer<typeof insertMediaSchema>;
export type MediaClient = typeof mediaClients.$inferSelect;
export type InsertMediaClient = z.infer<typeof insertMediaClientSchema>;
export type WebsiteSettings = typeof websiteSettings.$inferSelect;
export type InsertWebsiteSettings = z.infer<typeof insertWebsiteSettingsSchema>;
export type UserRole = typeof userRoles.$inferSelect;
export type RolePermission = typeof rolePermissions.$inferSelect;
